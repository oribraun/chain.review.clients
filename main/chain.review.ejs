<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Select Blockchain | Chain Review</title>
    <base href="/">
    <link rel="icon" type="image/x-icon" href="/assets/favicon.png" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <link rel="stylesheet" href="main/main-style.css?v=1">
</head>
<body>
<div class="container-xl">
    <nav class="main-header">
        <div class="text-center">
            <img src="https://new.capital/exchange/img/new/small_logo.svg" width="30" height="30" class="d-sm-inline-block mx-auto align-top" alt="">
            <span >Chain Review</span>
        </div>
    </nav>
    <!--    <section class="banner">-->
    <!--        <img src="/assets/new_year_2021.png" width="100%" alt="">-->
    <!--        <div class="bird-container bird-container&#45;&#45;one">-->
    <!--            <div class="bird bird&#45;&#45;one"></div>-->
    <!--        </div>-->

    <!--        <div class="bird-container bird-container&#45;&#45;two">-->
    <!--            <div class="bird bird&#45;&#45;two"></div>-->
    <!--        </div>-->

    <!--        <div class="bird-container bird-container&#45;&#45;three">-->
    <!--            <div class="bird bird&#45;&#45;three"></div>-->
    <!--        </div>-->

    <!--        <div class="bird-container bird-container&#45;&#45;four">-->
    <!--            <div class="bird bird&#45;&#45;four"></div>-->
    <!--        </div>-->
    <!--    </section>-->
    <div class="my-table-wrapper">
        <div class="my-table fixed-table-width">
            <div class="header">
                <div class="row">
                    <div class="col-1-6 fixed-column">
                        <div class="my-th pointer" onclick="sortByClick('NAME')">NAME <span class="caret name"></span></div>
                    </div>
                    <div class="col-1-1 unfixed-column">
                        <div class="my-th divider">&nbsp;</div>
                    </div>
                    <div class="col-1-3">
                        <div class="my-th divider pointer" onclick="sortByClick('24H TX')">24H TX <span class="caret txs"></span></div>
                    </div>
                    <div class="col-1-9">
                        <div class="my-th divider">WEEKLY TX</div>
                    </div>
                    <div class="col-1-7">
                        <div class="my-th divider pointer" onclick="sortByClick('VOLUME')">VOLUME <span class="caret volume"></span></div>
                    </div>
                    <div class="col-1-5">
                        <div class="my-th divider pointer" onclick="sortByClick('PRICE')">PRICE <span class="caret price"></span></div>
                    </div>
                    <div class="col-1-4">
                        <div class="my-th divider pointer" onclick="sortByClick('LAST BLOCK')">LAST BLOCK <span class="caret last_block"></span></div>
                    </div>
                    <div class="col-1-5">
                        <div class="my-th pointer" onclick="sortByClick('MASTERNODES')">MASTERNODES <span class="caret masternodes"></span></div>
                    </div>
                    <!--                <div class="col-md-2 my-th">Version</div>-->
                </div>
            </div>
            <div class="body">
                <% for(var i = 0 ; i < data.length ; i++) { %>
                    <div class="my-tr" id="my-tr-<%- i %>">
                        <div class="row">
                            <div class="col-1-6 fixed-column">
                                <div class="my-td my-td-with-icon">
                                    <span class="wallet-icon-<%=i%>">&nbsp;</span>
                                    <span class="wallet-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-1 unfixed-column">
                                <div class="my-td divider">
                                    <span class="wallet-symbol-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-3">
                                <div class="my-td divider">
                                    <span class="users_tx_count-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-9">
                                <div class="my-td my-td-chart divider">
                                <span class="users_tx_weekly-<%=i%>">
                            <canvas width="0" height="0" class="users_tx_weekly-<%=i%>-chart"></canvas>
                        </span>
                                </div>
                            </div>
                            <div class="col-1-7">
                                <div class="my-td divider">
                                    <span class="volume-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-5">
                                <div class="my-td divider">
                                    <span class="price-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-4">
                                <div class="my-td divider">
                                    <span class="last_block-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                            <div class="col-1-5">
                                <div class="my-td">
                                    <span class="masternodes-<%=i%>">&nbsp;</span>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script
        src="https://code.jquery.com/jquery-3.5.0.min.js"
        integrity="sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ="
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script src="https://omnipotent.net/jquery.sparkline/2.1.2/jquery.sparkline.min.js"></script>
<script>
    var data = <%-JSON.stringify(data)%>;
    var positions = {};
    var newData;
    var sortBy = '24H TX';
    var order = 'desc';
    function updateTable() {
        $.ajax({
            url: '/main/getUsersStats',
            method: 'get',
            contentType: "application/json",
            success: function(response) {
                if(!response.err) {
                    newData = response.data;
                    setUpTable(newData);
                }
            },
            error: function(err) {

            }
        })
    }

    function setUpPositions(data) {
        var pos = {};
        for(var i in data) {
            var currentPosition = $('#my-tr-' + i).position()
            pos[data[i].wallet] = {position: currentPosition, index: i};
        }
        // console.log('pos', pos);
        return pos;
    }

    function getPositionsDiff(pos, newPos) {
        var diff = {};
        var diffExist = false;
        for(var i in pos) {
            var moveToTop =  $('#my-tr-' + newPos[i].index).position().top - $('#my-tr-' + pos[i].index).position().top;
            diffExist  = moveToTop !== 0 || diffExist;
            diff[i] = {index: pos[i].index, moveToTop: moveToTop};
        }
        return {diff: diff, diffExist: diffExist};
    }

    function animateToDiff(diff) {
        for(var i in diff) {
            var ele = $('#my-tr-' + diff[i].index);
            animate(ele, diff[i].moveToTop);
        }
    }
    function animate(ele, moveToTop) {
        ele.css('position', 'relative');
        ele.animate({'top': moveToTop},300, 'linear', function() {
            ele.css('top', '0');
        });
    }
    setInterval(function() {
        updateTable()
    },1000 * 60)// every minute

    function setUpTable(data) {
        setUpCaret();
        data = data.sort(function(a,b) {
            if(sortBy === '24H TX') {
                if(order === 'desc') {
                    return b.stats.users_tx_count_24_hours - a.stats.users_tx_count_24_hours
                } else {
                    return a.stats.users_tx_count_24_hours - b.stats.users_tx_count_24_hours
                }
            }
            if(sortBy === 'NAME') {
                if(order === 'desc') {
                    return b.wallet > a.wallet ? 1 : -1
                } else {
                    return a.wallet > b.wallet ? 1 : -1
                }
            }
            if(sortBy === 'VOLUME') {
                if(order === 'desc') {
                    return b.market_summary['24hVolume'].BTC - a.market_summary['24hVolume'].BTC
                } else {
                    return a.market_summary['24hVolume'].BTC - b.market_summary['24hVolume'].BTC
                }
            }
            if(sortBy === 'PRICE') {
                if(order === 'desc') {
                    return b.market_summary.usd_price.BTC - a.market_summary.usd_price.BTC
                } else {
                    return a.market_summary.usd_price.BTC - b.market_summary.usd_price.BTC
                }
            }
            if(sortBy === 'LAST BLOCK') {
                if(order === 'desc') {
                    return b.stats.last_block - a.stats.last_block
                } else {
                    return a.stats.last_block - b.stats.last_block
                }
            }
            if(sortBy === 'MASTERNODES') {
                if(order === 'desc') {
                    return (b.stats.masternodesCount ? b.stats.masternodesCount.total : 0) - (a.stats.masternodesCount ? a.stats.masternodesCount.total : 0)
                } else {
                    return (a.stats.masternodesCount ? a.stats.masternodesCount.total : 0) - (b.stats.masternodesCount ? b.stats.masternodesCount.total : 0)
                }
            }
        }); // desc
        // shuffleArray(data);
        if(!Object.keys(positions).length) {
            positions = setUpPositions(data);
        }
        var new_positions = setUpPositions(data);
        var obj = getPositionsDiff(positions, new_positions);
        animateToDiff(obj.diff);
        positions = new_positions;
        // console.log(data);
        // data = data.sort(function(a,b) {return a.stats.users_tx_count - b.stats.users_tx_count}); // asc
        setTimeout(function() {
            for(var i in data) {
                // console.log('data', data)
                var coin = data[i];
                var name = coin.wallet === 'Fix' ? (coin.wallet + ' network').toUpperCase() : coin.wallet.toUpperCase()
                // var volume = coin.markets_stats['New Capital']['24hVolume'];
                // var avgPriceBtc = coin.markets_stats['New Capital']['avgPriceBtc'];
                var btcUsdPrice = parseFloat(coin.market_summary.usd_price.BTC);
                // var volumeUsd = parseFloat(volume) * parseFloat(coin.market_summary.usd_price.BTC);
                // var avgPriceBtcUsd = parseFloat(avgPriceBtc) * parseFloat(coin.market_summary.usd_price.BTC);

                function numberWithCommas(x, digits) {
                    var parts = x.toFixed(digits).toString().split(".");
                    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    return parts.join(".");
                }
                var volumeUsd = numberWithCommas(parseFloat(coin.market_summary['24hVolume'].BTC), 0);
                var avgPriceBtcUsd = numberWithCommas(parseFloat(coin.market_summary.usd_price.BTC), 4);

                $('.wallet-' + i).html('<a href="' +  coin.explorer  + '">' + name + '</a>')
                $('.wallet-icon-' + i).html('<img src="./' +  coin.wallet.toLowerCase()  + '.svg" />')
                $('.wallet-symbol-' + i).html(coin.symbol);
                $('.last_block-' + i).html(coin.stats.last_block);
                if(coin.stats.masternodesCount) {
                    $('.masternodes-' + i).html(coin.stats.masternodesCount.total + '/' + coin.stats.masternodesCount.enabled);
                } else {
                    $('.masternodes-' + i).html('-');
                }
                // $('.version-' + i).html(coin.stats.version.toString().replace(/(.)./g, "$1."));
                $('.users_tx_count-' + i).html(coin.stats.users_tx_count_24_hours);
                $('.volume-' + i).html('$' + volumeUsd);
                // $('.volume-' + i).attr('title', '$' + volumeUsd);
                $('.price-' + i).html('$' + avgPriceBtcUsd);
                // $('.price-' + i).attr('title', '$' + avgPriceBtcUsd);
                // $('.users_tx_weekly-' + i).html(coin.stats.users_tx_count_24_hours);
                // setUpChart2('.users_tx_weekly-' + i, coin.stats.users_tx_chart)
                setUpSparkline('.users_tx_weekly-' + i, coin.stats.users_tx_chart)
            }
        }, obj.diffExist ? 300 : 0)
    }
    setUpTable(data);

    function setUpChart(id, array) {
        // $(id).html(array.length);
        var dates = array.map(function(o){ return o.date});
        var counts = array.map(function(o){ return o.count});
        var options = {
            series: [{
                name: "User Tx",
                data: counts
            }],
            chart: {
                type: 'area',
                height: '50px',
                width: '100%',
                zoom: {
                    enabled: false
                },
                toolbar: { show:false },
                parentHeightOffset: 0,
            },
            responsive: [{
                breakpoint: undefined,
                options: {},
            }],
            dataLabels: {
                enabled: false
            },
            stroke: {
                curve: 'straight'
            },

            title: {
                text: undefined,
            },
            subtitle: {
                text: undefined,
                align: 'left'
            },
            labels: dates,
            xaxis: {
                show: false,
                type: 'datetime',
                labels: {show: false},
                axisBorder: {show: false},
                axisTicks: {show: false},
            },
            yaxis: {
                // opposite: true
                show: false,
                labels: {show: false},
                padding: {
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0,
                }
            },
            legend: {
                show: false,
                horizontalAlign: 'left'
            },
            grid: {
                show: false,
                padding: {
                    left: 0,
                    right: 0
                }
            },
            tooltip: {
                show: false
            }
        };

        console.log('options', options)
        setTimeout(function() {
            var chart = new ApexCharts(document.querySelector(id), options);
            chart.render();
        });
    }

    function setUpChart2(id, array) {
        var canvas = $(id + '-chart')[0];
        var context = canvas.getContext('2d');
        context.clearRect(0,0, canvas.width, canvas.height);
        canvas.width = $(id).width();
        canvas.height = $(id).height();
        canvas.style.width = '100%';
        canvas.style.height = '100%';
        canvas.style.verticalAlign = 'top';
        // canvas.style.position = 'absolute';
        var xStep = canvas.width/(array.length - 1);
        var countMap = array.map(function(o) {return o.count});
        var maxCount = Math.max.apply(null, countMap);
        var radius = 0;
        // console.log(maxCount)
        // console.log(countMap)
        // context.beginPath()
        // for(var i = 0; i < array.length; i++) {
        //     context.arc(i * xStep, canvas.height, canvas.width / array.length / 20, 0, 2 * Math.PI);
        //     context.stroke()
        // }
        // context.closePath();
        context.beginPath()
        context.arc(0, canvas.height, radius, 0, 2 * Math.PI);
        var points = [];
        for(var i = 0; i < array.length; i++) {
            points.push(i * xStep + ',' + Math.round(canvas.height - canvas.height * array[i].count / maxCount));
            context.arc(i * xStep, canvas.height - canvas.height * array[i].count / maxCount, radius, 0, 2 * Math.PI);
        }
        context.arc((array.length - 1) * xStep, canvas.height, radius, 0, 2 * Math.PI);
        context.fillStyle = "#72b6ff";
        context.fill()
        context.strokeStyle = "#007bff";
        context.stroke()
        // context.arc(0, canvas.height, radius, 0, 2 * Math.PI);
        context.closePath();
        $(id).append(canvas)
        // console.log('points', points)
        canvas.addEventListener('mousemove', function(e) {
            var x = e.clientX;
            var y = e.clientY;
            var offset = $(canvas).offset();
            var currentX = x - offset.left
            var currentY = y - offset.top
            // console.log(currentX)
            // console.log(currentY)
            if(points.indexOf(currentX + ',' + currentY) > -1) {
                // console.log('point')
            }
        })
    }

    function setUpSparkline(id, array) {
        var dataset = array.map(function(o) {return o.count});
        var dates = array.map(function(o, i) { return o.date});
        $(id).sparkline(dataset, {
            type: 'line',
            width: $(id)[0].clientWidth,
            height: $(id)[0].clientHeight,
            // height: '100%',
            lineColor: '#78beff',
            fillColor: '#9ad5ff'
            // tooltipFormat: '{{offset:dates}}<br>Txs:{{y:val}}',
            // tooltipValueLookups: {dates: dates}
        });
    }

    function shuffleArray(array) {
        for (var i = array.length - 1; i > 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }

    var sortInProgress = false;
    function sortByClick(sort) {
        if(sortInProgress) {
            return;
        }
        sortInProgress = true;
        if(sortBy === sort) {
            if(order === 'desc') {
                order = 'asc';
            } else {
                order = 'desc';
            }
        } else {
            sortBy = sort;
            order = 'desc';
        }

        this.setUpTable(data);
        setTimeout(() => {
            sortInProgress = false;
        }, 300)
    }

    function setUpCaret() {
        $('.caret').empty()
        if(sortBy === '24H TX') {
            if(order === 'desc') {
                $('.caret.txs').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.txs').append('<i class="fas fa-caret-up"></i>');
            }
        }
        if(sortBy === 'NAME') {
            if(order === 'desc') {
                $('.caret.name').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.name').append('<i class="fas fa-caret-up"></i>');
            }
        }
        if(sortBy === 'VOLUME') {
            if(order === 'desc') {
                $('.caret.volume').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.volume').append('<i class="fas fa-caret-up"></i>');
            }
        }
        if(sortBy === 'PRICE') {
            if(order === 'desc') {
                $('.caret.price').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.price').append('<i class="fas fa-caret-up"></i>');
            }
        }
        if(sortBy === 'LAST BLOCK') {
            if(order === 'desc') {
                $('.caret.last_block').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.last_block').append('<i class="fas fa-caret-up"></i>');
            }
        }
        if(sortBy === 'MASTERNODES') {
            if(order === 'desc') {
                $('.caret.masternodes').append('<i class="fas fa-caret-down"></i>');
            } else {
                $('.caret.masternodes').append('<i class="fas fa-caret-up"></i>');
            }
        }
    }
</script>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-112004141-3"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'UA-112004141-3');
</script>
</body>
</html>
